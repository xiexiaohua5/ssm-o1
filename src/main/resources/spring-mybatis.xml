<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd">

    <!--ignore-unresolvable="true",防止加载多个properties文件报错-->
    <context:property-placeholder location="classpath:db.properties"
                                  ignore-unresolvable="true" />

    <!--第一步：注入SQLSessionFactory对象-->
    <bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--1.1 配置连接池-->
        <!--dataSource对应了下面第三步-->
        <property name="dataSource" ref="dataSource"/>
        <!--1.2 注册所有的mapper.xml文件  **表示扫描多级目录 这里用一个*就好了-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
        <!--1.3 配置mapper.xml持久化对象的别名-->
        <property name="typeAliasesPackage" value="com.qf.hua.ssm.entity"/>
        <!--1.4 mybatis核心配置文件(可选配置)-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
    </bean>

    <!--第二步：扫描所有的mapper的接口文件-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--配置扫描mapper接口的包名-->
        <property name="basePackage" value="com.qf.hua.ssm.mapper"/>
        <!--关联sqlSessionFactoryBean-->
        <property name="sqlSessionFactoryBeanName" value="sessionFactory"/>
    </bean>

    <!--第三步：配置druid连接池-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 基本属性 url、user、password -->
        <property name="url" value="${db.url}" />
        <property name="username" value="${db.username}" />
        <property name="password" value="${db.password}" />

        <!-- 配置监控统计拦截的filters -->
        <property name="filters" value="stat" />

        <!-- 配置初始化大小、最大、最小 -->
        <property name="initialSize" value="1" />
        <property name="maxActive" value="${db.maxActive}" />
        <property name="minIdle" value="1" />

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000" />

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000" />

        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />

        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="true" />
        <property name="maxOpenPreparedStatements" value="20" />

        <property name="asyncInit" value="true" />
    </bean>
</beans>